@page "/clockHub"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Components
@rendermode InteractiveWebAssembly

<PageTitle>ClockHub</PageTitle>

<h1>Chess Clock</h1>

<p role="status">Current time: @currentClock</p>

<input @bind="lobbyName" placeholder="Enter lobby name" />
<button class="btn btn-primary" @onclick="JoinLobby">Join Lobby</button>
<button class="btn btn-primary" @onclick="IncrementClock">Increment</button>
<button class="btn btn-primary" @onclick="DecrementClock">Decrement</button>

@code {
    private int currentClock = 0;
    private string lobbyName;
    private HubConnection hubConnection;

    [Inject]
    private NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(Navigation.ToAbsoluteUri("/clockHub"))
            .Build();

        hubConnection.On<int>("UpdateClock", (clock) =>
        {
            currentClock = clock;
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task JoinLobby()
    {
        if (!string.IsNullOrEmpty(lobbyName))
        {
            await hubConnection.SendAsync("JoinLobby", lobbyName);
        }
    }

    private async Task IncrementClock()
    {
        if (!string.IsNullOrEmpty(lobbyName))
        {
            await hubConnection.SendAsync("IncrementClock", lobbyName);
        }
    }

    private async Task DecrementClock()
    {
        if (!string.IsNullOrEmpty(lobbyName))
        {
            await hubConnection.SendAsync("DecrementClock", lobbyName);
        }
    }

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}